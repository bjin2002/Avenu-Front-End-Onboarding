{"version":3,"sources":["Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","filter","tood","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAIjC,OACI,8BACI,kCACI,uBAAOC,KAAO,WAAWC,QAAWH,EAAKI,SAAUC,SAN/D,WACIJ,EAAWD,EAAKM,OAMPN,EAAKO,UCRP,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAQR,EAAa,EAAbA,WACvC,OACIQ,EAAMC,KAAI,SAAAV,GACN,OAAO,cAACD,EAAD,CAAoBE,WAAcA,EAAYD,KAAMA,GAAzCA,EAAKM,O,YCD7BK,EAAoB,iBAiDXC,MA9Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBAiCpB,OA/BAC,qBAAW,WACT,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KACzB,IAEHD,qBAAW,WACTI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IAyBF,qCACE,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WAxB5B,SAAoBK,GAClB,IAAMmB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAA1B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBU,EAASW,MAqBP,uBAAOE,IAAOZ,EAAab,KAAO,SAClC,wBAAQ0B,QAnBZ,SAAuBC,GACrB,IAAMtB,EAAOQ,EAAYe,QAAQC,MAErB,KAATxB,IACHO,GAAS,SAAAkB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAC1B,GAAI2B,cAAU1B,KAAMA,EAAMH,UAAU,QAE7DW,EAAYe,QAAQC,MAAQ,OAY1B,wBACA,wBAAQH,QAVZ,SAAyBC,GACvB,IAAMJ,EAAWhB,EAAMyB,QAAO,SAAAC,GAAI,OAAK1B,EAAML,YAC7CU,EAASW,IAQP,+BACA,gCAAMhB,EAAMyB,QAAO,SAAAlC,GAAI,OAAKA,EAAKI,YAAUgC,OAA3C,qBCpCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36b3c5e6.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ todo, toggleTodo }) {\n    function handleTodoClick () {\n        toggleTodo(todo.id)\n    }\n    return (\n        <div>\n            <label>\n                <input type = \"checkbox\" checked = {todo.complete} onChange = {handleTodoClick}/>\n                {todo.name}\n\n            </label>\n        </div>\n    )\n}\n","import Todo from './Todo'\n\nexport default function TodoList({ todos , toggleTodo}) {\n    return (\n        todos.map(todo => {\n            return <Todo key={todo.id} toggleTodo = {toggleTodo} todo={todo}/>\n        })\n    )\n}\n","import React, { useState, useRef, useEffect} from 'react'\nimport TodoList from './TodoList'\nimport {v4 as uuidv4} from 'uuid'\n\nconst LOCAL_STORAGE_KEY = 'todoApps.todos'\n\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect (() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [] )\n\n  useEffect (() =>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n \n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n\n    if(name === '') return\n    setTodos(prevTodos=> {\n      return [...prevTodos, {id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodo(e) {\n    const newTodos = todos.filter(tood => !todos.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo = {toggleTodo}/>\n      <input ref = {todoNameRef} type = \"text\"/>\n      <button onClick = {handleAddTodo}>  Add Todo</button>\n      <button onClick = {handleClearTodo}>  Clear Complete </button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}